worker_processes  auto;

events { }

http {
  # Upstream to services reachable by container name on the docker network
  upstream auth_upstream {
    server auth-service:4001;    # container-internal port of auth-service
  }

  upstream eval_upstream {
    server evaluation-service:3002; # container-internal port of evaluation-service
  }

  server {
    listen 8080;

    # Gateway health probe
    location = /health {
      add_header Content-Type text/plain;
      return 200 "ok\n";
    }

    # /api/auth/* -> auth-service
    location /api/auth/ {
      # CORS for dev
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
      add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";

      # Preflight
      if ($request_method = OPTIONS) {
        return 204;
      }

      # drop "/api/auth/" before proxying
      rewrite ^/api/auth/?(.*)$ /$1 break;
      proxy_pass http://auth_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # /api/eval/* -> evaluation-service
    location /api/eval/ {
      # CORS for dev
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
      add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";

      # Preflight
      if ($request_method = OPTIONS) {
        return 204;
      }
      
      # drop "/api/eval/" before proxying
      rewrite ^/api/eval/?(.*)$ /$1 break;
      proxy_pass http://eval_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
